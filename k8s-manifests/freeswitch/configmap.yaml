apiVersion: v1
kind: Namespace
metadata:
  name: ai-receptionist
  labels:
    name: ai-receptionist
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: freeswitch-config
  namespace: ai-receptionist
  labels:
    app: freeswitch
    component: telephony
data:
  # FreeSWITCH Integration Server Configuration
  server.conf: |
    # Network Configuration
    FREESWITCH_HOST=0.0.0.0
    FREESWITCH_PORT=8080
    
    # Service URLs
    AI_ENGINE_URL=http://ai-engine:8000
    BACKEND_API_URL=http://backend-api:3000/api/v1
    
    # Logging
    LOG_LEVEL=INFO
    
    # SIP Configuration
    SIP_PORT=5060
    RTP_PORT_MIN=16384
    RTP_PORT_MAX=32768
  
  # Health check script
  healthcheck.sh: |
    #!/bin/sh
    # Simple health check - verify the WebSocket server is responding
    curl -f http://localhost:8080/health || exit 1
                
                async with aiohttp.ClientSession() as session:
                    async with session.post(f"{self.backend_api_url}/call_transcripts", json=payload) as response:
                        if response.status in [200, 201]:
                            logger.info("Call transcript logged successfully")
                        else:
                            logger.error(f"Failed to log call transcript: {response.status}")
            except Exception as e:
                logger.error(f"Error logging call transcript: {e}")