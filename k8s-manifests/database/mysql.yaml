---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: ai-receptionist
data:
  my.cnf: |
    [mysqld]
    datadir=/var/lib/mysql
    socket=/var/run/mysqld/mysqld.sock

    character-set-server = utf8mb4
    collation-server = utf8mb4_unicode_ci
    skip-host-cache
    skip-name-resolve
    innodb_buffer_pool_size = 512M
    max_connections = 100

    [client]
    socket=/var/run/mysqld/mysqld.sock
    default-character-set = utf8mb4

    [mysql]
    default-character-set = utf8mb4

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: ai-receptionist
spec:
  serviceName: mysql-headless
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
        component: database
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsGroup: 999
      containers:
      - name: mysql
        image: mysql:8.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: mysql
          containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: root-password
        - name: MYSQL_DATABASE
          value: "ai_receptionist_production"
        - name: MYSQL_USER
          value: "ai_receptionist"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: user-password
        # Optional: keep MySQL 8 auth behavior compatible
        args: ["--default-authentication-plugin=mysql_native_password"]
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        - name: mysql-config
          mountPath: /etc/mysql/conf.d
          readOnly: true
        - name: mysql-socket
          mountPath: /var/run/mysqld
        livenessProbe:
          exec:
            command: ["bash","-lc","mysqladmin ping -uroot -p\"$MYSQL_ROOT_PASSWORD\""]
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command: ["bash","-lc","mysqladmin ping -uroot -p\"$MYSQL_ROOT_PASSWORD\""]
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: mysql-config
        configMap:
          name: mysql-config
      - name: mysql-socket
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: mysql-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: local-storage
      resources:
        requests:
          storage: 50Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: ai-receptionist
  labels:
    app: mysql
spec:
  type: ClusterIP
  ports:
  - name: mysql
    port: 3306
    targetPort: 3306
    protocol: TCP
  selector:
    app: mysql
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-headless
  namespace: ai-receptionist
  labels:
    app: mysql
spec:
  clusterIP: None
  ports:
  - name: mysql
    port: 3306
    targetPort: 3306
    protocol: TCP
  selector:
    app: mysql
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: ai-receptionist
data:
  my.cnf: |
    [mysqld]
    # Basic settings for development/testing
    character-set-server = utf8mb4
    collation-server = utf8mb4_unicode_ci
    
    # Security and compatibility
    skip-host-cache
    skip-name-resolve
    
    # Reduce resource usage for development
    innodb_buffer_pool_size = 512M
    max_connections = 100
    
    [mysql]
    default-character-set = utf8mb4
    
    [client]
    default-character-set = utf8mb4
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secrets
  namespace: ai-receptionist
type: Opaque
data:
  # Base64 encoded passwords
  # Generate with: echo -n "your-password" | base64
  root-password: bXlzcWwtcm9vdC1wYXNzd29yZA==
  user-password: bXlzcWwtdXNlci1wYXNzd29yZA==