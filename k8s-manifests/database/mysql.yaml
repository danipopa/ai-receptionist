apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: ai-receptionist
  labels:
    app: mysql
    component: database
spec:
  serviceName: mysql-headless
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
        component: database
    spec:
      initContainers:
      - name: mysql-init
        image: mysql:8.0
        imagePullPolicy: Always
        command:
        - bash
        - -c
        - |
          set -e
          echo "Starting MySQL initialization..."
          
          # Create socket directory with proper permissions
          mkdir -p /var/run/mysqld
          chown -R mysql:mysql /var/run/mysqld
          
          # Check if MySQL data directory exists and is empty
          if [ ! -d "/var/lib/mysql/mysql" ]; then
            echo "MySQL system tables not found. Initializing database..."
            
            # Ensure proper ownership of the data directory
            chown -R mysql:mysql /var/lib/mysql
            
            # Remove any socket files that might cause issues
            rm -f /var/lib/mysql/mysql.sock /var/lib/mysql/mysql.sock.lock
            rm -f /var/run/mysqld/mysqld.sock /var/run/mysqld/mysqld.sock.lock
            
            # Initialize the MySQL database with system tables
            mysqld --initialize-insecure --user=mysql --datadir=/var/lib/mysql
            
            echo "MySQL database initialized successfully"
          else
            echo "MySQL system tables already exist. Skipping initialization."
            # Still ensure proper ownership
            chown -R mysql:mysql /var/lib/mysql
            chown -R mysql:mysql /var/run/mysqld
            # Clean up any stale sockets
            rm -f /var/lib/mysql/mysql.sock /var/lib/mysql/mysql.sock.lock
            rm -f /var/run/mysqld/mysqld.sock /var/run/mysqld/mysqld.sock.lock
          fi
          
          echo "MySQL init container completed"
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: root-password
        - name: MYSQL_DATABASE
          value: "ai_receptionist_production"
        - name: MYSQL_USER
          value: "ai_receptionist"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: user-password
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        - name: mysql-socket
          mountPath: /var/run/mysqld
        securityContext:
          runAsUser: 0
      containers:
      - name: mysql
        image: mysql:8.0
        imagePullPolicy: Always
        ports:
        - name: mysql
          containerPort: 3306
          protocol: TCP
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: root-password
        - name: MYSQL_DATABASE
          value: "ai_receptionist_production"
        - name: MYSQL_USER
          value: "ai_receptionist"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: user-password
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        - name: mysql-config
          mountPath: /etc/mysql/conf.d
          readOnly: true
        - name: mysql-socket
          mountPath: /var/run/mysqld
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
            - -h
            - localhost
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: mysql-config
        configMap:
          name: mysql-config
      - name: mysql-socket
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: mysql-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: local-storage
      selector:
        matchLabels:
          app: mysql
      resources:
        requests:
          storage: 50Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: ai-receptionist
  labels:
    app: mysql
spec:
  type: ClusterIP
  ports:
  - name: mysql
    port: 3306
    targetPort: 3306
    protocol: TCP
  selector:
    app: mysql
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-headless
  namespace: ai-receptionist
  labels:
    app: mysql
spec:
  clusterIP: None
  ports:
  - name: mysql
    port: 3306
    targetPort: 3306
    protocol: TCP
  selector:
    app: mysql
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: ai-receptionist
data:
  my.cnf: |
    [mysqld]
    # Performance settings
    innodb_buffer_pool_size = 2G
    innodb_log_file_size = 256M
    innodb_flush_log_at_trx_commit = 2
    innodb_flush_method = O_DIRECT
    max_connections = 500
    
    # Logging
    slow_query_log = 1
    slow_query_log_file = /var/lib/mysql/slow.log
    long_query_time = 2
    
    # Binary logging for replication
    log-bin = mysql-bin
    binlog_format = ROW
    binlog_expire_logs_seconds = 604800  # 7 days
    
    # Character set
    character-set-server = utf8mb4
    collation-server = utf8mb4_unicode_ci
    
    # Security and compatibility
    skip-host-cache
    skip-name-resolve
    
    [mysql]
    default-character-set = utf8mb4
    
    [client]
    default-character-set = utf8mb4
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secrets
  namespace: ai-receptionist
type: Opaque
data:
  # Base64 encoded passwords
  # Generate with: echo -n "your-password" | base64
  root-password: bXlzcWwtcm9vdC1wYXNzd29yZA==
  user-password: bXlzcWwtdXNlci1wYXNzd29yZA==