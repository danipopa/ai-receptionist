apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: ai-receptionist
  labels:
    app: redis
    component: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        component: cache
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        imagePullPolicy: Always
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        command: ["redis-server"]
        args: ["/etc/redis/redis.conf"]
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secrets
              key: password
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis
          readOnly: true
        - name: redis-data
          mountPath: /data
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: ai-receptionist
  labels:
    app: redis
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP
  selector:
    app: redis
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-data-pvc
  namespace: ai-receptionist
spec:
  accessModes:
    - ReadWriteOnce
  selector:
    matchLabels:
      app: redis
  resources:
    requests:
      storage: 10Gi
  storageClassName: local-storage
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: ai-receptionist
data:
  redis.conf: |
    # Redis configuration for Kubernetes
    bind 0.0.0.0
    port 6379
    protected-mode no
    
    # Memory management
    maxmemory 512mb
    maxmemory-policy allkeys-lru
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    
    # Logging
    loglevel notice
    logfile ""
    
    # Security
    # requirepass ${REDIS_PASSWORD}
    
    # Performance tuning
    tcp-keepalive 300
    timeout 0
    
    # AOF persistence
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secrets
  namespace: ai-receptionist
type: Opaque
data:
  # Base64 encoded password
  # Generate with: echo -n "your-redis-password" | base64
  password: cmVkaXMtcGFzc3dvcmQ=